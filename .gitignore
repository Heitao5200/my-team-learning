# Created by .ignore support plugin (hsz.mobi)
### JupyterNotebooks template
# gitignore template for Jupyter Notebooks
# website: http://jupyter.org/

.ipynb_checkpoints
*/.ipynb_checkpoints/*

# Remove previous ipynb_checkpoints
#   git rm -r .ipynb_checkpoints/
#

### Python template
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

### JetBrains template
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# Generated files
.idea/**/contentModel.xml

# Sensitive or high-churn files
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
cmake-build-*/

# Mongo Explorer plugin
.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based Rest Client
.idea/httpRequests

# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser

.idea/
notebook/pandas20/data/task_special/
notebook/pandas20/data/task11/
/notebook/gnn_learning26/my_homework/dataset/
/notebook/transformers_nlp28/my_homework/test-glue/
/notebook/transformers_nlp28/my_homework/test-ner/
/notebook/transformers_nlp28/my_homework/test-squad/
/notebook/transformers_nlp28/codes/test-squad/
/notebook/transformers_nlp28/my_homework/test-squad-trained/
/notebook/transformers_nlp28/my_homework/test-translation/
/modify_username.sh
/notebook/Interpretable_machine_learning44/assets/
/notebook/Interpretable_machine_learning44/pytorch-grad-cam/
/notebook/Interpretable_machine_learning44/torch-cam/
/notebook/Interpretable_machine_learning44/my_homework/output/
/notebook/Interpretable_machine_learning44/my_homework/test_img/
/notebook/Interpretable_machine_learning44/my_homework/data/
/notebook/pytorch_learning35/my_homework/FashionMNIST/
/notebook/pytorch_learning35/my_homework/models/
/notebook/pytorch_learning35/my_homework/runs/
/notebook/pytorch_learning35/my_homework/FahionModel.pkl
/notebook/Interpretable_machine_learning44/my_homework/mnist_data/MNIST/raw/
/notebook/Interpretable_machine_learning44/my_homework/data/
/notebook/Interpretable_machine_learning44/my_homework/test_img/
/notebook/diffusion_models_learning51/my_homework/data/mnist/MNIST/raw/t10k-images-idx3-ubyte
/notebook/diffusion_models_learning51/my_homework/data/mnist/MNIST/raw/t10k-images-idx3-ubyte.gz
/notebook/diffusion_models_learning51/my_homework/data/mnist/MNIST/raw/t10k-labels-idx1-ubyte
/notebook/diffusion_models_learning51/my_homework/data/mnist/MNIST/raw/t10k-labels-idx1-ubyte.gz
/notebook/diffusion_models_learning51/my_homework/data/mnist/MNIST/raw/train-images-idx3-ubyte
/notebook/diffusion_models_learning51/my_homework/data/mnist/MNIST/raw/train-images-idx3-ubyte.gz
/notebook/diffusion_models_learning51/my_homework/data/mnist/MNIST/raw/train-labels-idx1-ubyte
/notebook/diffusion_models_learning51/my_homework/data/mnist/MNIST/raw/train-labels-idx1-ubyte.gz
/notebook/diffusion_models_learning51/assets/unit1/01_introduction_to_diffusers.ipynb
/notebook/diffusion_models_learning51/assets/unit1/01_introduction_to_diffusers_CN.ipynb
/notebook/diffusion_models_learning51/assets/unit1/02_diffusion_models_from_scratch.ipynb
/notebook/diffusion_models_learning51/assets/unit1/02_diffusion_models_from_scratch_CN.ipynb
/notebook/diffusion_models_learning51/assets/unit1/README.md
/notebook/diffusion_models_learning51/assets/unit1/README_CN.md
/notebook/diffusion_models_learning51/assets/unit2/01_finetuning_and_guidance.ipynb
/notebook/diffusion_models_learning51/assets/unit2/01_finetuning_and_guidance_CN.ipynb
/notebook/diffusion_models_learning51/assets/unit2/02_class_conditioned_diffusion_model_example.ipynb
/notebook/diffusion_models_learning51/assets/unit2/02_class_conditioned_diffusion_model_example_CN.ipynb
/notebook/diffusion_models_learning51/assets/unit2/conditional_digit_generation.png
/notebook/diffusion_models_learning51/assets/unit2/finetune_model.py
/notebook/diffusion_models_learning51/assets/unit2/guidance_eg.png
/notebook/diffusion_models_learning51/assets/unit2/README.md
/notebook/diffusion_models_learning51/assets/unit2/README_CN.md
/notebook/diffusion_models_learning51/assets/unit3/01_stable_diffusion_introduction.ipynb
/notebook/diffusion_models_learning51/assets/unit3/01_stable_diffusion_introduction_CN.ipynb
/notebook/diffusion_models_learning51/assets/unit3/cfg_example_0_1_2_10.jpeg
/notebook/diffusion_models_learning51/assets/unit3/README.md
/notebook/diffusion_models_learning51/assets/unit3/README_CN.md
/notebook/diffusion_models_learning51/assets/unit3/sd_demo_images.jpg
/notebook/diffusion_models_learning51/assets/unit3/sd_unet_color.png
/notebook/diffusion_models_learning51/assets/unit3/text_encoder_noborder.png
/notebook/diffusion_models_learning51/assets/unit4/01_ddim_inversion.ipynb
/notebook/diffusion_models_learning51/assets/unit4/01_ddim_inversion_CN.ipynb
/notebook/diffusion_models_learning51/assets/unit4/02_diffusion_for_audio.ipynb
/notebook/diffusion_models_learning51/assets/unit4/02_diffusion_for_audio_CN.ipynb
/notebook/diffusion_models_learning51/assets/unit4/README.md
/notebook/diffusion_models_learning51/assets/unit4/README_CN.md
